import {PRIMARY_STATISTICS} from '../constants';

import classnames from 'classnames';
import * as d3 from 'd3';
import equal from 'fast-deep-equal';
import produce from 'immer';
import React, {useEffect, useRef, useCallback, useMemo} from 'react';

function Minigraph({timeseries}) {
  const svgRef1 = useRef();
  const svgRef2 = useRef();
  const svgRef3 = useRef();
  const svgRef4 = useRef();
  const refs = useRef([]);

  const dates = useMemo(() => {
    return Object.keys(timeseries).slice(-20);
@@ -29,17 +27,17 @@ function Minigraph({timeseries}) {
    const chartRight = 100 - margin.right;
    const chartBottom = 100 - margin.bottom;

    const svg1 = d3.select(svgRef1.current);
    const svg2 = d3.select(svgRef2.current);
    const svg3 = d3.select(svgRef3.current);
    const svg4 = d3.select(svgRef4.current);
    const svgArray = [];
    refs.current.forEach((ref) => {
      svgArray.push(d3.select(ref));
    });

    console.log(svgArray);

    const xScale = d3
      .scaleTime()
      .domain([new Date(d3.min(dates)), new Date(d3.max(dates))])
      .range([margin.left, chartRight]);

    const svgArray = [svg1, svg2, svg3, svg4];
    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];

    const dailyMin = d3.min(dates, (date) => timeseries[date].active);
@@ -50,6 +48,7 @@ function Minigraph({timeseries}) {
        timeseries[date].deceased
      )
    );

    const domainMinMax = Math.max(-dailyMin, dailyMax);

    const yScale = d3
@@ -58,7 +57,7 @@ function Minigraph({timeseries}) {
      .range([chartBottom, margin.top]);

    svgArray.forEach((svg, index) => {
      const type = PRIMARY_STATISTICS[index];
      const statistic = PRIMARY_STATISTICS[index];
      const color = colors[index];

      const path = svg
@@ -73,7 +72,7 @@ function Minigraph({timeseries}) {
          d3
            .line()
            .x((date) => xScale(new Date(date)))
            .y((date) => yScale(timeseries[date][type]))
            .y((date) => yScale(timeseries[date][statistic]))
            .curve(d3.curveMonotoneX)
        );

@@ -97,7 +96,7 @@ function Minigraph({timeseries}) {
        .attr('r', 2)
        .attr('cursor', 'pointer')
        .attr('cx', (date) => xScale(new Date(date)))
        .attr('cy', (date) => yScale(timeseries[date][type]))
        .attr('cy', (date) => yScale(timeseries[date][statistic]))
        .on('mouseover', (d) => {
          d3.select(d3.event.target).attr('r', '5');
        })
@@ -120,54 +119,19 @@ function Minigraph({timeseries}) {

  return (
    <div className="Minigraph">
      <div className="svg-parent fadeInUp" style={{animationDelay: '1.4s'}}>
        <svg
          ref={svgRef1}
          width="100"
          height="75"
          viewBox="0 0 100 75"
          preserveAspectRatio="xMidYMid meet"
        />
      </div>

      <div
        className="svg-parent is-blue fadeInUp"
        style={{animationDelay: '1.5s'}}
      >
        <svg
          ref={svgRef2}
          width="100"
          height="75"
          viewBox="0 0 100 75"
          preserveAspectRatio="xMidYMid meet"
        />
      </div>

      <div
        className="svg-parent is-green fadeInUp"
        style={{animationDelay: '1.6s'}}
      >
        <svg
          ref={svgRef3}
          width="100"
          height="75"
          viewBox="0 0 100 75"
          preserveAspectRatio="xMidYMid meet"
        />
      </div>

      <div
        className="svg-parent is-gray fadeInUp"
        style={{animationDelay: '1.7s'}}
      >
        <svg
          ref={svgRef4}
          width="100"
          height="75"
          viewBox="0 0 100 75"
          preserveAspectRatio="xMidYMid meet"
        />
      </div>
      {PRIMARY_STATISTICS.map((statistic) => (
        <div key={statistic} className={classnames('svg-parent')}>
          <svg
            ref={(ref) => {
              refs.current.push(ref);
            }}
            width="100"
            height="75"
            viewBox="0 0 100 75"
            preserveAspectRatio="xMidYMid meet"
          />
        </div>
      ))}
    </div>
  );
}
const { task } = require("./lib");
const c = require("./lib/constants");

(async function main() {
  console.log("Running task on start...");
  await task({
    sheet: c.SPREAD_SHEET_LINKS,
    tabs: {
      links: c.TAB_LINKS
    },
    file: c.FILE_LINKS
  });
  await task({
    sheet: c.SPREAD_SHEET_DOCTORS,
    tabs: {
      doctors: c.TAB_DOCTOR
    },
    file: c.FILE_DOCTORS
  });
  await task({
    sheet: c.SPREAD_SHEET_FAQ,
    tabs: {
      faq: c.TAB_FAQ
    },
    file: c.FILE_FAQ
  });
  await task({
    sheet: c.SPREAD_SHEET_TNC,
    tabs: {
      tnc: c.TAB_TNC
    },
    file: c.FILE_TNC
  });
  console.log("End of sheet-to-json_generic");
})();
set -eu

repo_uri="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
remote_name="origin"
main_branch="master"
target_branch="master"

cd "$GITHUB_WORKSPACE"

git config user.name "$GITHUB_ACTOR"
git config user.email "${GITHUB_ACTOR}@bots.github.com"

git checkout "$target_branch"
git rebase "${remote_name}/${main_branch}"

npm install drive-db
npm install node-fetch
npm install moment
npm install moment-timezone

cp ./faq.json ./faq_prev.json
cp ./tnc.json ./tnc_prev.json
cp ./links.json ./links_prev.json
cp ./doctors.json ./doctors_prev.json

node sheet-to-json_generic.js

rm ./faq_prev.json
rm ./tnc_prev.json
rm ./links_prev.json
rm ./doctors_prev.json

set +e  # Grep succeeds with nonzero exit codes to show results.
git status | grep 'new file\|modified'
if [ $? -eq 0 ]
then
    set -e
    git commit -am "data updated on - $(date)"
    git remote set-url "$remote_name" "$repo_uri" # includes access token
    git push --force-with-lease "$remote_name" "$target_branch"
else
    set -e
    echo "No changes since last run"
fi

echo "finish"
module.exports = {
  env: {
    browser: true,
    es6: true,
  },
  extends: ['plugin:react/recommended', 'google', 'prettier', 'prettier/react'],
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly',
  },
  parser: 'babel-eslint',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: 'module',
  },
  plugins: ['react', 'prettier', 'react-hooks'],
  rules: {
    'require-jsdoc': 0,
    'prettier/prettier': 'error',
    'no-invalid-this': 0,
    'react/prop-types': 0,
    'react-hooks/rules-of-hooks': 'warn',
    'react-hooks/exhaustive-deps': 'error',
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
};
